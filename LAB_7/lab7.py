# -*- coding: utf-8 -*-
"""Lab7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12D_Z02JG4GNa3mJ4srXkc70Cj-U8Mt3V
"""

import matplotlib.pyplot as plt
import math

def generator_data(a, b, size):
  n = (b-a)/(size-1)
  result = []
  s = a;
  while s < b:
    result.append(s)
    s = s+n;
  if len(result) < size:
    result.append(b)
  return result

#Cau 1
def cdf_normal(x, mu, sigma):
  return 0.5*(1+math.erf((x-mu)/(sigma*math.sqrt(2))))

def plot_cdf_normal(mu, sigma):
  X = generator_data(mu-4*sigma, mu+4*sigma, 100)
  P_normal = [cdf_normal(x, mu, sigma) for x in X]
  plt.plot(X, P_normal, 'r-')
  plt.title('CDF of Normal(%.2f, %.2f)' %(mu, sigma))
  plt.xlabel('X')
  plt.ylabel('P')
  plt.show()

plot_cdf_normal(0, 1.5)

#Cau 2
def cdf_normal(x, mu, sigma):
  return 0.5*(1+math.erf((x-mu)/(sigma*math.sqrt(2))))

def cau2(mu, sigma):
  P_normal1 = cdf_normal(9, mu, sigma)
  P_normal2 = cdf_normal(12, mu, sigma)
  return P_normal2 - P_normal1

cau2(10, 1)